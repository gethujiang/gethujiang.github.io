<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>绕过CDN查找真实IP地址</title>
      <link href="/2018/09/24/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%9C%9F%E5%AE%9EIP%E5%9C%B0%E5%9D%80/"/>
      <url>/2018/09/24/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%9C%9F%E5%AE%9EIP%E5%9C%B0%E5%9D%80/</url>
      <content type="html"><![CDATA[<p>1.查找分站的IP，许多主站使用CDN，分站不使用<br><strong>它的二级域名很有可能没有使用CDN，通过分站来确定真实IP</strong>二级域名IP不一定是真实IP，但是很有可能在一个C段内，对所有C段扫描开放80端口，访问<br>2.使用nslookup查询，大部分CDN供给商只针对国内市场，而对国外市场几乎是不做CDN，所以有很大的几率会直接解析到实在IP。<br>nslookup xxx.com 国外DNS服务器IP地址（冷门的dns）<br>3.ping xxx.com查询真实IP地址<br>CDN将<a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> cname到CDN主服务器上，ping xxx.com通常是真实IP地址<br>4.看以前的解析记录<br>域名采用CDN以前使用的IP地址很有可能是CDN的真实IP地址<br>5.phpinfo<br>phpinfo中有<br>6.有的服务器本地有sendmail，注册后，发送邮件给注册者，查看邮件源代码可以得到真实IP<br>有的会有mailserver，和网站处于同一网段，访问80就可以得到真实IP<br>7.rss订阅，可以得到真实IP地址<br>RSS订阅是站点用来和其他站点之间共享内容的一种简易方式，即Really Simple Syndication（简易信息聚合）</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>安全工具</title>
      <link href="/2018/09/16/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2018/09/16/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>nmap<br>1.主机发现<br>-SP：扫描存活主机<br>nmap -SP 192.168.1.0/24<br>2.扫描方式<br>-sA:tcp ack 三次握手扫描<br>-sS:tcp syn 半开放扫描<br>-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans<br>-sU: UDP Scan<br>-sN/sF/sX: TCP Null, FIN, and Xmas scans<br>-p:指定端口扫描<br>-p-：扫描全部端口<br>3.操作系统识别<br>-O：操作系统识别<br>-A：详细识别<br>4.其他扫描<br>-v：详细输出<br>-V：输出版本信息</p><p>sqlmap<br>  sqlmap基础<br>1.sqlmap安装<br>    Windows系统<br><strong>环境<br>python 2.7版本（默认next，记住添加环境变量）</strong>sqlmap源码下载<br>2.sqlmap使用<br>-u：测试url<br>–dbs：列出使用数据库名称<br>–tables：列出数据库中表名称<br>-–columns 枚举DBMS数据库表列<br>-D DB 指定进行枚举的数据库名<br>-T TBL 要指定操作的数据库表名称<br>-C COL 要进行枚举的数据库列<br>–dump 转储数据库中的表数据<br>–dump-all 转储所有的数据库表中的数据<br>–data=DATA 通过POST发送的数据字符串<br>–batch 自动选yes<br>–smart 启发式快速判断<br>-l LIST 从Burp或WebScarab代理的日志中解析目标。<br>-g GOOGLEDORK 处理Google dork的结果作为目标URL。<br>–current-db：获取当前数据库</p><p>burpsuite<br>1.proxy<br>设置代理，并接口为on开始拦截HTTP请求<br>2.intruder（入侵者）</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>hydra中文说明</title>
      <link href="/2018/06/08/hydra%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/"/>
      <url>/2018/06/08/hydra%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>中文使用说明(转):<br>-R 继续从上一次进度接着破解<br>-S 采用SSL链接<br>-s PORT 如果非默认端口，可通过这个参数指定<br>-l LOGIN 小写，用于指定破解的用户，对特定用户破解<br>-L FILE 大写，用于指定用户的用户名字典<br>-p PASS 小写，用于指定密码破解，少用，一般是采用密码字典<br>-P FILE 大写，用于指定密码字典<br>-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探<br>-C FILE 使用冒号分割格式 例如 “登录名:密码”来代替-L/-P参数<br>-M FILE 指定目标列表文件一行一条<br>-o FILE 指定结果输出文件<br>-f 找到第一对登录名或者密码的时候中止破解<br>-t TASKS 同时运行的线程数，默认为16<br>-w TIME 设置最大超时的时间，单位秒，默认是30s<br>-v / -V 显示详细过程<br>server 目标ip<br>service 指定服务名，支持的服务跟协议有: telnet ftp pop3[-ntlm] imap[-ntlm] smb smbnt http-{head|get} http-{get|post}-form http-proxy cisco cisco-enable vnc ldap2 ldap3 mssql mysql oracle-listener postgres nntp socks5 rexec rlogin pcnfs snmp rsh cvs svn icq sapr3 ssh2 smtp-auth[-ntlm] pcanywhere teamspeak sip vmauthd firebird ncp afp<br>HYDRA_PROXY_HTTP 变量参数可以用来定义代理服务器(只能使用http代理)<br>语法:<br>HYDRA_PROXY_HTTP=”<a href="http://ip:port/&quot;" target="_blank" rel="noopener">http://ip:port/&quot;</a><br>HYDRA_PROXY_CONNECT=ip:8000<br>如果你使用的代理需要用户名和密码，请使用HYDRA_PROXY_AUTH 变量参数:<br>HYDRA_PROXY_AUTH=”the_login:the_password”</p><p>1.破解ftp<br>hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV<br>hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV<br>2.get方式提交 破解web登录<br>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get /web/<br>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get /web/index.asp<br>3.破解ssh<br>hydra -l 用户名 -p 密码字典 -t 线程 -e ns ip ssh<br>hydra -l 用户名 -p 密码字典 -t 线程 -o save.log ip ssh<br>4.破解teamspeak<br>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak<br>5.post方式提交 破解web登录<br>hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form “/admin/login.php:username=^USER^&amp;password=^PASS^&amp;submit=login:sorry password”<br>6.cisco<br>hydra -P pass.txt 192.168.1.229 cisco<br>hydra -m cloud -P pass.txt 192.168.1.229 cisco-enable<br>7.smb<br>hydra -l administrator -P pass.txt 192.168.0.141 smb<br>8.pop3<br>hydra -l muts -P pass.txt my.pop3.mail pop3<br>9.https<br>hydra -m /index.php -l muts -P pass.txt 192.168.0.12 https<br>10.rdp<br>hydra ip rdp -l administrator -P pass.txt -V<br>11.http-proxy<br>hydra -l admin -P pass.txt http-proxy://192.168.0.1<br>12.imap<br>hydra -L user.txt -p secret 192.168.0.1 imap PLAIN<br>hydra -C defaults.txt -6 imap://[fe80::2c:31ff:fe12:ac11]:143/PLAIN<br>13.telnet<br>hydra ip telnet -l 用户 -P 密码字典 -t 32 -s 23 -e ns -f -V<br>14.http:<br>hydra -L list_user -P list_password 192.168.56.101 http-post-form “/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed” -V</p>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
